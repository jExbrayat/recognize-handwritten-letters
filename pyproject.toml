[project]
name = "recognize-handwritten-letters"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "jupyter>=1.1.1",
    "keras>=3.9.1",
    "matplotlib>=3.10.1",
    "notebook>=7.3.3",
    "numpy>=2.2.4",
    "onnx>=1.17.0",
    "optuna-integration>=4.4.0",
    "optuna>=4.4.0",
    "pandas>=2.2.3",
    "pyarrow>=19.0.1",
    "scikit-learn>=1.6.1",
    "seaborn>=0.13.2",
    "skl2onnx>=1.18.0",
    "torch>=2.6.0",
    "mlflow>=3.1.4",
    "torchvision>=0.21.0",
]

[dependency-groups]
dev = [
    "nb-clean>=4.0.1",
    "nbdev>=2.3.37",
    "poethepoet>=0.33.1",
    "pytest>=8.3.5",
    "ruff>=0.11.2",
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[tool.uv.sources]
torch = [
  { index = "pytorch-cpu" },
]
torchvision = [
  { index = "pytorch-cpu" },
]

[tool.ruff.lint]
select = [
    "E",
    "F",
    "UP",
    "B",
    "SIM",
    "I",
    "RUF",
    "FURB",
    "W",
    "PERF",
    "N",
    "PD",
    "NPY",
    "FLY",
    "PTH",
    "ARG",
    "TC",
    "SLOT",
    "SIM",
    "SLF",
    "Q",
    "PT",
    "PYI",
    "ANN",
    "DOC",
    "D",
    "D212",
    "D402",
    "D415",
    "D417",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.poe]
    [tool.poe.tasks.format]
    help = "Format the files"
    sequence = [
        {cmd = "uv run ruff format"},
    ]

    [tool.poe.tasks.lint]
    help = "Lint the files"
    sequence = [
        {cmd = "uv run ruff check --fix"},
    ]

    [tool.poe.tasks.check]
    help = "Check formatting & linting"
    sequence = [
        {cmd = "uv run ruff format --check"},
        {cmd = "uv run ruff check"},
    ]
