[tool.poetry]
name = "recognize-handwritten-letters"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
x-python = ">=3.10,<3.11"
x-numpy = "^1.26.1"
x-pandas = "^2.1.1"
x-matplotlib = "^3.8.0"
x-scikit-learn = "^1.3.2"
x-seaborn = "^0.13.0"
x-jupyter = "^1.0.0"
keras = "^2.12.0"
tensorflow = "^2.12.0"
tensorflow-io-gcs-filesystem = "^0.31.0"
umap-learn = "^0.5.5"

[tool.poetry.group.dev.dependencies]
black = {extras = ["jupyter"], version = "^23.10.1"}
isort = "^5.12.0"
nbqa = "^1.7.1"
poethepoet = "^0.24.4"
papermill = "^2.5.0"
nb-clean = "^3.2.0"
flake8 = "^6.1.0"
flake8-annotations = "^3.0.1"
pandas-vet = "^2023.8.2"
flake8-bugbear = "^23.12.2"
sphinx = "^7.2.6"
sphinx-rtd-theme = "^2.0.0"
nbdev = "^2.3.13"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.poe]
  [tool.poe.tasks.format]
  help = "Format the files"
  sequence = [
    { cmd = "black ." },
    { cmd = "isort ." },
    { cmd = "nbqa isort . --float-to-top" },
  ]

  [tool.poe.tasks.lint]
  help = "Lint the files"
  sequence = [
    { cmd = "flake8 ." },
    { cmd = "nbqa flake8 ." },
  ]

  [tool.poe.tasks.nbcheck]
  help = "Check notebooks for metadata"
  cmd = "nb-clean check . --preserve-cell-outputs --remove-empty-cells"

  [tool.poe.tasks.nbclean]
  help = "Clean notebook metadatas"
  sequence = [
    { cmd = "nbdev_clean --fname ." },
    { cmd = "nb-clean clean . --preserve-cell-outputs --remove-empty-cells"},
  ]


  [tool.poe.tasks.nbrun]
  help = "Run notebooks to see if they work"
  shell = """
    RED='\\033[0;31m'
    NC='\\033[0m' # No Color

    for input_file in $(find src -type f -name "*.ipynb"); do
      echo "${RED}Notebook: ${input_file}${NC}"
      papermill "$input_file" temp.ipynb
    done

    rm temp.ipynb
  """

  [tool.poe.tasks.nbqa]
  help = "Run all QA tools on notebooks"
  sequence = [
    { ref = "format" },
    { ref = "nbclean" },
    { ref = "nbcheck" },
    { ref = "nbrun" },
  ]
